//RUNAS/#/cpuTemp
import win.ui;
import win.ui.menu;
/*DSG{{*/
winform = win.form(text="System Monitor Setting";right=600;bottom=500;bgcolor=16777215;max=false)
winform.add(
custom={cls="custom";text="自定义控件";left=0;top=0;right=600;bottom=500;ah=1;aw=1;z=1}
)
/*}}*/

import config;
import tools;

if (config.__single && !tools.singleInstance(winform)) {
	return; 
}

// TODO
// 1.Home页面（各项监控指标）
// 2.设置页面（设置指标，设置图标）
// 3.图标根据 icos 自动切换和配置

// 创建菜单
var webForm = null
var pageSetting = null
function loadWebForm() {
	if (!webForm) {
		webForm = winform.custom.loadForm("\dlg\web.aardio")
	}
	return webForm;
}
var menuTable = {
	{
		"信息";
		function(id){
			winform.show()
			loadWebForm().wbGoTo('/')
		}
	};
	{
		"设置";
		function(id){
			winform.show()
			loadWebForm().wbGoTo('/setting')
		}
	};
	{ "退出"; function() { winform.onClose=null; winform.close() } };
}
// 创建托盘菜单
winform.popmenu = tools.createPopMenu(winform, menuTable, 'popmenu')
// 创建主菜单
winform.mainmenu = tools.createMainMenu(winform, menuTable)
// 创建托盘
winform.tray = tools.createTray(winform, "\res\icons\mario\icon (1).ico", "Running")
subscribe("trayOpenWinForm", function(){
	loadWebForm().wbGoTo('/')
})

// 托盘更新的定时器
var trayIconIndex = 1
var trayIconMax = 3
var trayIconName = "\res\icons\mario"
var trayUpdateTimer = tools.createTimeInterval(winform, function(){
	winform.tray.icon = trayIconName+"\icon ("+trayIconIndex+").ico"
	trayIconIndex += 1
	if (trayIconIndex > trayIconMax) {
		trayIconIndex = 1
	}
}, 100, true)
subscribe("trayIconChange",function(name){
	import iconHelper
	trayIconName = iconHelper.getPath(name)
	trayIconMax = iconHelper.getCount(name)
	trayIconIndex = 1
})
// 系统信息监控的定时器
import openHardwareMonitor;
var systemMonitorTimer = tools.createTimeInterval(winform, function(){
	var cpuPercent = openHardwareMonitor.getAndUpdateCpuUsage()
	// 修改频率
	winform.tray.tip = 'CPU: ' + cpuPercent + '%'
	var interval = (100 - cpuPercent) * 3 / trayIconMax
	trayUpdateTimer.setInterval(interval > 0 ? interval : 1)
}, 1000, true)

// 注册窗口事件监听
tools.winformEventHandle(winform)
// 窗口启动
winform.show(false);
return win.loopMessage();