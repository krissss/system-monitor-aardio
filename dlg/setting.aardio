import win.ui;
/*DSG{{*/
var winform = win.form(text="设置";right=600;bottom=500;bgcolor=16777215)
winform.add()
/*}}*/

import web.view;
var wb = web.view(winform);

wb.export({
    alert = function(msg){
		winform.msgbox(msg) 
	}
	init = function(){
		import iconHelper
		return {
			form: {
				icon: 'mario'
			},
			icons: iconHelper.getCanUseNames()
		}; 
	}
	refreshIcons = function(){
		return iconHelper.getCanUseNames(); 
	}
	downloadIcons = function(){
		import inet.downBox;
		var downBox = inet.downBox(winform,"下载资源...",true )
		var url = "https://github.com/krissss/system-monitor-aardio/archive/refs/heads/assets.zip"
		var savePath = "/assets/assets.zip"
		var ok = downBox.test(url , savePath) 
		if( ok ){
			winform.msgbox("资源已下载完成、服务器未更新,无需重新下载")
			return; 
		} elseif( ok === null ){
			winform.msgboxErr("下载错误,HTTP错误代码:"+ ( downBox.statusCode : ""));
			return;
		}
	 	
		if(downBox.download(url, savePath) ){
	 		//winform.msgbox("下载完成");
	 		// 解压
	 		import zlib.unzip;
	 		import console;
	 		zlib.unzip.extract(savePath,"/assets",
				function(fileName,extractPath,fileInfo,size,unitSize,unitName){
					if( size !== null )
						console.log( "正在解压文件",fileName,size++ unitName );
					else {
						console.log( "正在解压目录",fileName );
					}
					return true;
				}
			)
			// 移动解压目录
			console.log( "移动目录。。。" );
			import fsys
			if (!fsys.move("/assets/system-monitor-aardio-assets/assets/**", "/assets/")) {
				console.log( "移动目录失败！！" );
				return;
			}
			if (!fsys.delete("/assets/system-monitor-aardio-assets")) {
				console.log( "清理目录失败！！" );
				return;
			}
			// 关闭控制台
			console.close()
	 	}
	 	
	 	return iconHelper.getCanUseNames(); 
	}
	
	saveSetting = function(form){
		/*
import console
		console.dump(form)
*/
		
		publish("trayIconChange", form.icon)
	}
})

import wsock.tcp.asynHttpServer;
var httpServer = wsock.tcp.asynHttpServer();
httpServer.run(function(response,request,session){
	import string
	import io
	import fsys.mime
	if (string.startWith(request.path, '/web/')) {
		var path = "/dlg/" + request.path
		if (io.exist(path)) {
			response.contentType = fsys.mime.fromFile(path);
			response.write(string.load(path));
			return;
		}
		response.status = 404;
		return;
	}
	if (string.startWith(request.path, '/assets/')) {
		var path = request.path
		if (io.exist(path)) {
			response.contentType = fsys.mime.fromFile(path);
			response.write(string.load(path));
			return; 
		}
		response.status = 404;
		return;
	}
})
if (_STUDIO_INVOKED) {
	wb.go(httpServer.getUrl(""))
} else {
	wb.go( httpServer.getUrl("/web/index.html") )
}
//wb.html = string.load("\dlg\setting.html")

winform.show();
win.loopMessage();
return winform;